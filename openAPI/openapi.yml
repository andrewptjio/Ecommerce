openapi: 3.0.0
info:
  version: '1'
  title: Ecommerce
  description: Ecommerce Alterra
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: LocalHost
    url: localhost:8000
paths:
  /users/register:
    post:
      summary: Create New User
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersSchema'
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'
  /users/login:
    post:
      summary: Login User
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: Andrew@yahoo.com
                password:
                  type: string
                  example: Andrew123
                name:
                  type: string
                  example: Andrew
                handphonenumber:
                  type: string
                  example: 0123456789
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'
        '404':
          $ref: '#/components/responses/Response404'
  /users:
    get:
      security:
        - bearerAuth: []
      summary: Get All Users
      tags:
        - Users
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '404':
          $ref: '#/components/responses/Response404'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /users/{userId}:
    get:
      security:
        - bearerAuth: []
      summary: Get User By ID
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '404':
          $ref: '#/components/responses/Response404'
    put:
      security:
        - bearerAuth: []
      summary: Update User By ID
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: Ilham@yahoo.com
                password:
                  type: string
                  example: ilham123
                name:
                  type: string
                  example: ilham
                handphonenumber:
                  type: string
                  example: 9876543210
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '404':
          $ref: '#/components/responses/Response404'
    delete:
      security:
        - bearerAuth: []
      summary: Delete User ID
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '404':
          $ref: '#/components/responses/Response404'
  /products:
    post:
      security:
        - bearerAuth: []
      summary: Create Product
      tags:
        - Products
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productname:
                  type: string
                  example: bola
                price:
                  type: integer
                  example: 10000
                stock:
                  type: integer
                  example: 10
                category_id:
                  type: integer
                  example: 1
                description:
                  type: string
                  example: bola basket
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'
    get:
      security:
        - bearerAuth: []
      summary: Get all products
      tags:
        - Products
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'
        '404':
          $ref: '#/components/responses/Response404'
  /Products/{productId}:
    get:
      security:
        - bearerAuth: []
      summary: Get a product by id
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '404':
          $ref: '#/components/responses/Response404'
    put:
      security:
        - bearerAuth: []
      summary: Update by ID
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productname:
                  type: string
                  example: bola
                price:
                  type: integer
                  example: 10000
                stock:
                  type: integer
                  example: 15
                category_id:
                  type: integer
                  example: 1
                description:
                  type: string
                  example: bola basket
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'
        '404':
          $ref: '#/components/responses/Response404'
    delete:
      security:
        - bearerAuth: []
      summary: Delete by ID
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'
        '404':
          $ref: '#/components/responses/Response404'
components:
  securitySchemes:
    bearerAuth:           
      type: http
      scheme: bearer
      bearerFormat: JWT   
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    Response200:
      description: success create
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 200
              message:
                type: string
                example: Successful Operation
    Response400:
      description: bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 400
              message:
                type: string
                example: Bad Request
    Response404:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 404
              message:
                type: string
                example: Not Found
  schemas:
    UsersSchema:
      type: object
      properties:
        email:
          type: string
          example: Andrew@yahoo.com
        password:
          type: string
          example: Andrew123
        name:
          type: string
          example: Andrew
        handphonenumber:
          type: string
          example: 0123456789